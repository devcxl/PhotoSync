plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    // kapt plugin is applied below using the legacy apply plugin to avoid plugin classpath/version conflicts
}

apply plugin: 'kotlin-kapt'

android {
    namespace 'cn.devcxl.photosync'
    compileSdk 36

    defaultConfig {
        applicationId "cn.devcxl.photosync"
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
                arguments "-DANDROID_STL=c++_shared"
            }
        }

        // Only build ABI(s) we have prebuilt libraw for. Add more when you add their libraw.so.
        ndk {
            abiFilters "arm64-v8a"
        }
    }

    externalNativeBuild {
        cmake {
            path = file("src/main/cpp/CMakeLists.txt")
            version = "3.22.1"
        }
    }

    signingConfigs {
        release {
            // 优先使用环境变量，备选使用 project property（可放在 `local.properties`）
            def keystorePath = System.getenv("KEYSTORE_PATH") ?: project.findProperty("KEYSTORE_PATH")
            def storePwd = System.getenv("KEYSTORE_PASSWORD") ?: project.findProperty("KEYSTORE_PASSWORD")
            def alias = System.getenv("KEY_ALIAS") ?: project.findProperty("KEY_ALIAS")
            def keyPwd = System.getenv("KEY_PASSWORD") ?: project.findProperty("KEY_PASSWORD")

            if (keystorePath) {
                storeFile file(keystorePath)
                if (storePwd) storePassword storePwd
                if (alias) keyAlias alias
                if (keyPwd) keyPassword keyPwd
            } else {
                throw new GradleException("Keystore path not set. Set KEYSTORE_PATH env or add KEYSTORE_PATH/KEYSTORE_PASSWORD/KEY_ALIAS/KEY_PASSWORD to `local.properties`.")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding = true
    }
}
dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.constraintlayout

    // Required by PhotoView
    implementation libs.androidx.appcompat

    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    // Room
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    kapt libs.androidx.room.compiler
    implementation libs.timber

     implementation libs.opencv

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // Added for gallery: swipe and pinch-to-zoom
    implementation libs.androidx.viewpager2
    implementation libs.photoview

}